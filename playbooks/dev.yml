---
- name: Create a container based ssh based lab environment - e.g. for Ansible
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars:
    #    docker_network:       example.com
    #docker_bridge_name:   example
    # docker_subnet:        172.4.26.0/16
    # docker_gateway:       172.4.26.1

    env_default_image:          rhel8-ssh

    env_networks:
      - name:             example.com
        bridge_name:      example
        subnet:           172.4.26.0/16
        gateway:          172.4.26.1

      - name:             internal.com
        bridge_name:      internal

    env_labels:
      created_by:           envy
      guid:                 "{{ env | default('000000') }}"

    lab_machines:

      - name: control1
        group: bastions 
        published_ports:
          - '22'
          - '8080:8080'  
          - '5432'

      - name: node21
        group: appdbs 
        published_ports:
          - '22'
          - '5432'
          - '8081:8080'

      - name: node31
        group: appdbs 
        published_ports:
          - '22'

  tasks:

    - name: Create network(s) 
      community.docker.docker_network:
        name: "{{ __network.name }}"
        driver_options:
          com.docker.network.bridge.name: "{{ __network.bridge_name }}"
            #        ipam_config:
            # - subnet:       "{{ __network.subnet }}"
            # gateway:      "{{ __network.gateway }}"
        labels: "{{ env_labels }}"
      loop: "{{ env_networks }}"
      loop_control:
        loop_var: __network

      tags:
        - network
        - networking

    - name: Create individual env instances
      community.docker.docker_container:
        name:               "{{ env_container.name }}"
        image:              "{{ env_container.image           | default(env_default_image) }}"
        privileged:         "{{ env_container.privileged      | default(true) }}"
        published_ports:    "{{ env_container.published_ports | default([]) }}"
        networks:           "{{ env_container.networks        | default([{ 'name': env_networks[0].name}]) }}"
          #  - name:           "{{ docker_network }}"
        env:
          SSH_SUDO:         ALL=(ALL) NOPASSWD:ALL
          SSH_USER:         vagrant
            #labels:  "AnsibleGroup=foo,bar=foo"
        labels: "{{ env_labels }}"
      loop: "{{ lab_machines }}"
      loop_control:
        loop_var: env_container
      tags:
        - instances
        - containers

...
