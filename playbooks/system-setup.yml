---
- name: Setup an envy host platform with runtime packages
  hosts: localhost
  connection: local
  gather_facts: false
  become: true
  vars:

    envy_rhel8_packages:
      - python3
      - docker_container

  tasks:

    - name: Install container runtime packages
      dnf:
        name: "{{ envy_rhel_  }}"
        state: present

    - name: Create individual env instances
      community.docker.docker_container:
        name:             "{{ __env_container.name }}"
        image:            "{{ __env_container.image           | default(env_default_image) }}"
        privileged:       "{{ __env_container.privileged      | default(true) }}"
        published_ports:  "{{ __env_container.published_ports | default([]) }}"
        networks:         "{{ __env_container.networks        | default([{ 'name': env_networks[0].name}]) }}"
        labels:           "{{ env_labels }}"
        env:
          SSH_SUDO:         ALL=(ALL) NOPASSWD:ALL
          SSH_USER:         vagrant
      loop: "{{ env_instances }}"
      loop_control:
        loop_var: __env_container
      tags:
        - instances
        - containers
        - inventory
      register: r_container_info

    - name: Debug output register r_container_info
      debug:
        verbosity: 2
        msg:
          - "name is {{ __container.__env_container.name }}"
          - "group is {{ __container.__env_container.group }}"
          - "IP is {{ __container.container.NetworkSettings.Networks[env_networks[0].name].IPAddress }}"
          - "Port map is {{ __container.container.NetworkSettings.Ports['22/tcp'][0].HostPort }}"
      loop: "{{ r_container_info.results }}"
      loop_control:
        loop_var: __container
      tags:
        - inventory

    - name: Debug output register r_container_info as json file
      copy:
        content: "{{ r_container_info | to_nice_json }}"
        dest:    "/tmp/container-{{ env_name }}-info.json"
      tags:
        - inventory

    - name: Generate in-memory inventory
      add_host:
        name:             "{{ __container.__env_container.name }}"
        shortname:        "{{ __container.__env_container.name }}"
        ansible_ssh_host: localhost
          # ansible_ssh_host: "{{ __container.container.NetworkSettings.Networks[env_networks[0].name].IPAddress }}"
        group:            "{{ __container.__env_container.group }}"
        ansible_ssh_port: "{{ __container.container.NetworkSettings.Ports['22/tcp'][0].HostPort }}"
      loop: "{{ r_container_info.results }}"
      loop_control:
        label: "{{ __container.__env_container.name }}"
        loop_var: __container
      tags:
        - inventory

    - name: Create env directory structure and files
      import_role:
        name: envy_manage_host_env_configuration
      tags:
        - host-config

...
