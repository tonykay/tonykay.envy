#!/bin/bash

# Setup vars

VIRTUALENV_HOME=/opt/envy/venv-envy
NUM_ARGS=$#
ACTION=$1
OBJECT=$2

usage ()
{
  echo "USAGE: nv <action> <object> <extras>"
  echo
  echo "nv deploy environment         # Deploy an Environment"
  echo "nv destroy environment        # Destroy an Environment"
  echo "nv setup                      # Reconfigure nv"
  return
}

process_cmd_line ()
{
  if [ $NUM_ARGS -eq 0 ]; 
  then
    usage
    exit 2
  fi
}  

setup_nv_parameters ()
{
  TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")        # For logfile identification
}

activate_virtualenv ()
{
  if [ -f "$VIRTUALENV_HOME"/bin/activate ];
  then
    source /opt/envy/venv-envy/bin/activate
  fi
}

cmd_list ()
{
  docker ps | cut -c 21-42,83-102,150-170 | sed 's/IMAGE   /INSTANCE/'
}

cmd_add ()
{

ansible-playbook \
  ~/.ansible/collections/ansible_collections/tonykay/envy/playbooks/"${1}".yml \
  -e "envy=${2}" -e @${ENVY_PATH}/playbooks/vars/addons/"${3}".yml
}

process_cmd_line
setup_nv_parameters
activate_virtualenv

ansible-playbook \
  ~/.ansible/collections/ansible_collections/tonykay/envy/playbooks/"${1}".yml \
  -e "envy=${2}" # \
  # -e @~/.ansible/collections/ansible_collections/tonykay/envy/playbooks/vars/"${ENVIRONMENT}"/defauts

# 2> /tmp/warnings \
#  | tee /tmp/log | sed -n -e 's/.*ENVY_USER_OUTPUT//' -e 's/\"$//p'


